// deno-lint-ignore-file
var k=Object.defineProperty;var t=(e,i)=>k(e,"name",{value:i,configurable:!0});function o(e){let i={kv:{}};for(let n=0;n<e.length;n++)m(i,e[n]);return i}t(o,"buildTreeNodes");function m(e,i){let n=i[0],r=i[1],s=n.length;s>0&&(e.kv[`${n[0]}`]=e.kv[`${n[0]}`]?e.kv[`${n[0]}`]:s===1?r:{}),s>1&&(e.kv[`${n[0]}`][`${n[1]}`]=e.kv[`${n[0]}`][`${n[1]}`]?e.kv[`${n[0]}`][`${n[1]}`]:s===2?r:{}),s>2&&(e.kv[`${n[0]}`][`${n[1]}`][`${n[2]}`]=e.kv[`${n[0]}`][`${n[1]}`][`${n[2]}`]?e.kv[`${n[0]}`][`${n[1]}`][`${n[2]}`]:s===3?r:{}),s>3&&(e.kv[`${n[0]}`][`${n[1]}`][`${n[2]}`][`${n[3]}`]=e.kv[`${n[0]}`][`${n[1]}`][`${n[2]}`][`${n[3]}`]?e.kv[`${n[0]}`][`${n[1]}`][`${n[2]}`][`${n[3]}`]:s===4?r:{}),s>4&&(e.kv[`${n[0]}`][`${n[1]}`][`${n[2]}`][`${n[3]}`][`${n[4]}`]=e.kv[`${n[0]}`][`${n[1]}`][`${n[2]}`][`${n[3]}`][`${n[4]}`]?e.kv[`${n[0]}`][`${n[1]}`][`${n[2]}`][`${n[3]}`][`${n[4]}`]:s===5?r:{}),s>5&&(e.kv[`${n[0]}`][`${n[1]}`][`${n[2]}`][`${n[3]}`][`${n[4]}`][`${n[5]}`]=e.kv[`${n[0]}`][`${n[1]}`][`${n[2]}`][`${n[3]}`][`${n[4]}`][`${n[5]}`]?e.kv[`${n[0]}`][`${n[1]}`][`${n[2]}`][`${n[3]}`][`${n[4]}`][`${n[5]}`]:s===6?r:{})}t(m,"processNode");function d(e){let i=v({value:e,key:"kv-prefix:",type:a(e)});return f(e,i),i}t(d,"createTree");function v(e){let i=e.value??null;return g(i)&&(i="{ }"),e.type==="string"&&(i=`"${i}"`),{key:e.key||null,parent:e.parent||null,value:i,isExpanded:e.isExpanded||!1,type:e.type||null,children:e.children||[],el:e.el||null,depth:e.depth||0,dispose:null}}t(v,"createNode");function f(e,i){if(typeof e=="object")for(let n in e){let r=v({value:e[n],key:n,depth:i.depth+1,type:a(e[n]),parent:i});i.children.push(r),f(e[n],r)}}t(f,"createSubnode");function a(e){return Array.isArray(e)?"array":e===null?"null":typeof e}t(a,"getDataType");function g(e){return a(e)==="object"&&Object.keys(e).length===0}t(g,"isEmptyObject");function C(e,i){let n=document.createElement("div");n.className="elem-container";let r=o(JSON.parse(e)),s=d(r.kv);l(s,function(c){c.el=E(c),n.appendChild(c.el)}),i.innerHTML="",i.appendChild(n)}t(C,"renderTreeView");function u(e){e.children.forEach(i=>{i.el.classList.add("hidden"),i.isExpanded&&u(i)})}t(u,"hideNodeChildren");function $(e){e.children.forEach(i=>{i.el.classList.remove("hidden"),i.isExpanded&&$(i)})}t($,"showNodeChildren");function y(e){if(e.children.length>0){let i=e.el.querySelector(".fas");i&&i.classList.replace("fa-caret-right","fa-caret-down")}}t(y,"setCaretIconDown");function h(e){if(e.children.length>0){let i=e.el.querySelector(".fas");i&&i.classList.replace("fa-caret-down","fa-caret-right")}}t(h,"setCaretIconRight");function E(e){let i=document.createElement("div");if(e.children.length>0){i.innerHTML=L({key:e.key,value:e.value,size:N(e)});let r=i.querySelector(".caret-icon");r.addEventListener("click",()=>p(e)),e.dispose=r.removeEventListener("click",()=>p(e))}else i.innerHTML=x({key:e.key,value:e.value,type:e.value==="{}"?"object":typeof e.value});let n=i.children[0];return e.parent!==null&&n.classList.add("hidden"),n.style="margin-left: "+e.depth*18+"px;",n}t(E,"createNodeElement");var N=t(e=>{let i=e.children.length;return e.type==="array"?`[${i}]`:e.type==="object"?`{${i}}`:null},"getSizeString");function p(e){e.isExpanded?(e.isExpanded=!1,h(e),u(e)):(e.isExpanded=!0,y(e),$(e))}t(p,"toggleNode");function l(e,i){i(e),e.children.length>0&&e.children.forEach(n=>{l(n,i)})}t(l,"traverse");function S(e){l(e,function(i){i.el.classList.remove("hidden"),i.isExpanded=!0,y(i)})}t(S,"expand");function w(e){l(e,function(i){i.isExpanded=!1,i.depth>e.depth&&i.el.classList.add("hidden"),h(i)})}t(w,"collapse");function z(e){l(e,i=>{i.dispose&&i.dispose(),e.el.parentNode.parentNode.removeChild(i)})}t(z,"destroy");function x(e={key:"",value:null,type:""}){let{key:i,value:n,type:r}=e;return`
     <div class="line">
       <div class="empty-icon"></div>
       <div class="json-key">${i}</div>
       <div class="json-separator">:</div>
       <div class="json-value json-${r}">${n}</div>
     </div>
   `}t(x,"collapsedTemplate");function L(e){let{key:i,size:n}=e;return`
     <div class="line">
       <div class="caret-icon"><i class="fas fa-caret-right"></i></div>
       <div class="json-key">${i}</div>
       <div class="json-size">${n}</div>
     </div>
   `}t(L,"expandedTemplate");export{w as collapse,x as collapsedTemplate,z as destroy,S as expand,L as expandedTemplate,C as renderTreeView,p as toggleNode,l as traverse};
